Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/NinaPan/Desktop/water-festival/client/node_modules/expo/src/modal/ModalImplementation.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  ModalImplementation: {
    displayName: 'ModalImplementation'
  }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/NinaPan/Desktop/water-festival/client/node_modules/expo/src/modal/ModalImplementation.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var ModalImplementation = _wrapComponent('ModalImplementation')(function (_Component) {
  _inherits(ModalImplementation, _Component);

  function ModalImplementation(props) {
    _classCallCheck(this, ModalImplementation);

    var _this = _possibleConstructorReturn(this, (ModalImplementation.__proto__ || Object.getPrototypeOf(ModalImplementation)).call(this, props));

    _this._handleHardwareBack = function () {
      if (_this.props.onRequestClose && _this.props.visible) {
        _this.props.onRequestClose();
        return true;
      }
      return false;
    };

    _this.state = {
      visible: new _reactNative.Animated.Value(props.visible ? 1 : 0),
      rendered: props.visible
    };
    return _this;
  }

  _createClass(ModalImplementation, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      _reactNative.BackHandler.addEventListener('hardwareBackPress', this._handleHardwareBack);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.visible !== nextProps.visible) {
        if (nextProps.animationType === 'none') {
          this.setState({ rendered: nextProps.visible });
        } else {
          if (nextProps.visible) {
            this.setState({
              rendered: true
            }, function () {
              return _reactNative.Animated.timing(_this2.state.visible, {
                toValue: 1,
                duration: 300,
                easing: _reactNative.Easing.quad,
                useNativeDriver: true
              }).start(nextProps.onShow);
            });
          } else {
            _reactNative.Animated.timing(this.state.visible, {
              toValue: 0,
              duration: 250,
              easing: _reactNative.Easing.quad,
              useNativeDriver: true
            }).start(function (finished) {
              if (finished) {
                _this2.setState({
                  rendered: false
                });
              }
            });
          }
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _reactNative.BackHandler.removeEventListener('hardwareBackPress', this._handleHardwareBack);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          animationType = _props.animationType,
          transparent = _props.transparent,
          layout = _props.layout;
      var _state = this.state,
          visible = _state.visible,
          rendered = _state.rendered;


      if (!rendered) {
        return null;
      }

      var opacity = animationType === 'fade' ? visible : 1;
      var translate = animationType === 'slide' ? visible.interpolate({
        inputRange: [0, 1],
        outputRange: [layout.height, 0]
      }) : 0;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, pointerEvents: visible ? 'auto' : 'none', __source: {
            fileName: _jsxFileName,
            lineNumber: 108
          }
        },
        transparent ? null : _react3.default.createElement(_reactNative.Animated.View, {
          style: [styles.backdrop, styles.container, { opacity: visible }],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        }),
        _react3.default.createElement(
          _reactNative.Animated.View,
          {
            style: [styles.content, transparent ? null : styles.background, { opacity: opacity, transform: [{ translateY: translate }] }], __source: {
              fileName: _jsxFileName,
              lineNumber: 114
            }
          },
          this.props.children
        )
      );
    }
  }]);

  return ModalImplementation;
}(_react2.Component));

exports.default = ModalImplementation;


var styles = _reactNative.StyleSheet.create({
  container: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  content: {
    flex: 1
  },
  background: {
    backgroundColor: 'white'
  },
  backdrop: {
    backgroundColor: 'rgba(0, 0, 0, .6)'
  }
});