Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/Users/NinaPan/Desktop/water-festival/client/App.js',
    _class2,
    _temp2,
    _class3,
    _temp3,
    _class4,
    _temp4;

var _reactNative = require('react-native');

var _reactNativeMaterialBottomNavigation = require('react-native-material-bottom-navigation');

var _reactNativeMaterialBottomNavigation2 = _interopRequireDefault(_reactNativeMaterialBottomNavigation);

var _MaterialIcons = require('@expo/vector-icons/MaterialIcons');

var _MaterialIcons2 = _interopRequireDefault(_MaterialIcons);

var _reactNavigation = require('react-navigation');

var _ContentPage = require('./ContentPage');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  AllActivitiesScreen: {
    displayName: 'AllActivitiesScreen'
  },
  MyActivitiesScreen: {
    displayName: 'MyActivitiesScreen'
  },
  MapScreen: {
    displayName: 'MapScreen'
  },
  InformationScreen: {
    displayName: 'InformationScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/NinaPan/Desktop/water-festival/client/App.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var AllActivitiesScreen = _wrapComponent('AllActivitiesScreen')((_temp = _class = function (_Component) {
  _inherits(AllActivitiesScreen, _Component);

  function AllActivitiesScreen() {
    _classCallCheck(this, AllActivitiesScreen);

    return _possibleConstructorReturn(this, (AllActivitiesScreen.__proto__ || Object.getPrototypeOf(AllActivitiesScreen)).apply(this, arguments));
  }

  _createClass(AllActivitiesScreen, [{
    key: 'render',
    value: function render() {
      var navigate = this.props.navigation.navigate;

      return _react3.default.createElement(
        _reactNative.View,
        { style: allActivitiesStyles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        },
        _react3.default.createElement(_reactNative.SectionList, {
          sections: [{ title: 'Grade 2', data: ['Animals and Water', 'Snow Cone Station', 'Storm Water', 'Watering Hole'] }, { title: 'Grade 3', data: ['Down on the Farm', 'Drainwater Detectives', 'No Water off a Duck\'s Back', 'Rethnk your Drink', 'Wet N\' Wild'] }, { title: 'Grade 4', data: ['Water Water Water', 'Loo Loo Loo', 'Wellington Visitor'] }, { title: 'Grade 5', data: ['I Love Water', 'I <3 Water', 'H20 :)'] }],
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _react3.default.createElement(
              _reactNative.Text,
              { style: allActivitiesStyles.item, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 33
                }
              },
              item
            );
          },
          renderSectionHeader: function renderSectionHeader(_ref2) {
            var section = _ref2.section;
            return _react3.default.createElement(
              _reactNative.Text,
              { style: allActivitiesStyles.sectionHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              section.title
            );
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        })
      );
    }
  }]);

  return AllActivitiesScreen;
}(_react2.Component), _class.navigationOptions = {
  title: 'All Activities'
}, _temp));

var MyActivitiesScreen = _wrapComponent('MyActivitiesScreen')((_temp2 = _class2 = function (_Component2) {
  _inherits(MyActivitiesScreen, _Component2);

  function MyActivitiesScreen() {
    _classCallCheck(this, MyActivitiesScreen);

    return _possibleConstructorReturn(this, (MyActivitiesScreen.__proto__ || Object.getPrototypeOf(MyActivitiesScreen)).apply(this, arguments));
  }

  _createClass(MyActivitiesScreen, [{
    key: 'render',
    value: function render() {
      var navigate = this.props.navigation.navigate;

      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 48
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 49
            }
          },
          'These are my activities.'
        )
      );
    }
  }]);

  return MyActivitiesScreen;
}(_react2.Component), _class2.navigationOptions = {
  title: 'My Activities'
}, _temp2));

var MapScreen = _wrapComponent('MapScreen')((_temp3 = _class3 = function (_Component3) {
  _inherits(MapScreen, _Component3);

  function MapScreen(props) {
    _classCallCheck(this, MapScreen);

    var _this3 = _possibleConstructorReturn(this, (MapScreen.__proto__ || Object.getPrototypeOf(MapScreen)).call(this, props));

    _this3.state = { label: props.initialInput, x: props.x, y: props.y };
    return _this3;
  }

  _createClass(MapScreen, [{
    key: 'input',
    value: function input() {
      this.setState({ label: 'hello world' });
    }
  }, {
    key: 'onClick',
    value: function onClick(evt) {
      this.setState({ label: '', x: evt.nativeEvent.locationX, y: evt.nativeEvent.locationY });
      x = evt.nativeEvent.locationX;
      y = evt.nativeEvent.locationY;
      this.setState({ label: '' });

      if (x > 375 && x < 390 && y > 470 && y < 490) {
        this.setState({ label: 'LANDMARK #1 >' });
      } else if (x > 305 && x < 315 && y > 445 && y < 455) {
          this.setState({ label: 'LANDMARK #2 >' });
        } else if (x > 535 && x < 545 && y > 260 && y < 270) {
            this.setState({ label: 'LANDMARK #2 >' });
          } else if (x > 680 && x < 690 && y > 280 && y < 290) {
              this.setState({ label: 'LANDMARK #2 >' });
            } else if (x > 190 && x < 210 && y > 365 && y < 375) {
                this.setState({ label: 'LANDMARK #3 >' });
              } else if (x > 550 && x < 560 && y > 205 && y < 215) {
                  this.setState({ label: 'LANDMARK #3 >' });
                } else if (x > 610 && x < 620 && y > 240 && y < 250) {
                    this.setState({ label: 'LANDMARK #4 >' });
                  } else if (x > 670 && x < 680 && y > 165 && y < 175) {
                      this.setState({ label: 'LANDMARK #5 >' });
                    } else if (x > 590 && x < 610 && y > 95 && y < 105) {
                        this.setState({ label: 'LANDMARK #6 >' });
                      } else if (x > 515 && x < 525 && y > 90 && y < 105) {
                          this.setState({ label: 'LANDMARK #7 >' });
                        } else if (x > 435 && x < 445 && y > 164 && y < 175) {
                            this.setState({ label: 'LANDMARK #8 >' });
                          } else if (x > 510 && x < 520 && y > 210 && y < 220) {
                              this.setState({ label: 'LANDMARK #9 >' });
                            } else if (x > 375 && x < 385 && y > 225 && y < 245) {
                                this.setState({ label: 'LANDMARK #10 >' });
                              } else if (x > 260 && x < 275 && y > 225 && y < 235) {
                                  this.setState({ label: 'LANDMARK #11 >' });
                                } else if (x > 270 && x < 280 && y > 210 && y < 220) {
                                    this.setState({ label: 'LANDMARK #12 >' });
                                  } else if (x > 270 && x < 285 && y > 265 && y < 275) {
                                      this.setState({ label: 'LANDMARK #13 >' });
                                    } else if (x > 190 && x < 210 && y > 275 && y < 285) {
                                        this.setState({ label: 'LANDMARK #14 >' });
                                      } else if (x > 570 && x < 580 && y > 155 && y < 165) {
                                          this.setState({ label: 'LANDMARK #14 >' });
                                        } else if (x > 175 && x < 185 && y > 225 && y < 235) {
                                            this.setState({ label: 'LANDMARK #15 >' });
                                          } else if (x > 185 && x < 195 && y > 190 && y < 200) {
                                              this.setState({ label: 'LANDMARK #16 >' });
                                            } else if (x > 130 && x < 140 && y > 300 && y < 315) {
                                                this.setState({ label: 'LANDMARK #17 >' });
                                              } else if (x > 160 && x < 170 && y > 310 && y < 320) {
                                                  this.setState({ label: 'LANDMARK #18 >' });
                                                } else if (x > 135 && x < 145 && y > 385 && y < 395) {
                                                    this.setState({ label: 'LANDMARK #19 >' });
                                                  } else if (x > 295 && x < 305 && y > 380 && y < 390) {
                                                      this.setState({ label: 'LANDMARK #20 >' });
                                                    } else if (x > 345 && x < 355 && y > 360 && y < 370) {
                                                        this.setState({ label: 'LANDMARK #21 >' });
                                                      } else if (x > 270 && x < 285 && y > 440 && y < 450) {
                                                          this.setState({ label: 'LANDMARK #22 >' });
                                                        } else if (x > 655 && x < 665 && y > 385 && y < 395) {
                                                            this.setState({ label: 'LANDMARK #23 >' });
                                                          } else if (x > 600 && x < 610 && y > 345 && y < 355) {
                                                              this.setState({ label: 'LANDMARK #24 >' });
                                                            }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var navigate = this.props.navigation.navigate;

      return _react3.default.createElement(
        _reactNative.ScrollView,
        { horizontal: true, maximumZoomScale: 5.0, __source: {
            fileName: _jsxFileName,
            lineNumber: 189
          }
        },
        _react3.default.createElement(
          _reactNative.ScrollView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 190
            }
          },
          _react3.default.createElement(
            _reactNative.TouchableOpacity,
            { onPress: function onPress(evt) {
                return _this4.onClick(evt);
              }, activeOpacity: 1.0, __source: {
                fileName: _jsxFileName,
                lineNumber: 191
              }
            },
            _react3.default.createElement(
              _reactNative.Image,
              {
                source: { uri: 'https://water-festival.herokuapp.com/map.png' },
                style: { width: 838, height: 648 },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 192
                }
              },
              _react3.default.createElement(
                _reactNative.Text,
                { style: { backgroundColor: 'white', top: this.state.y - 5, left: this.state.x - 5, position: "absolute" }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 196
                  }
                },
                this.state.label
              )
            )
          )
        )
      );
    }
  }]);

  return MapScreen;
}(_react2.Component), _class3.navigationOptions = {
  title: 'Map'
}, _temp3));

MapScreen.defaultProps = { initialInput: '', x: 0, y: 0 };

var InformationScreen = _wrapComponent('InformationScreen')((_temp4 = _class4 = function (_Component4) {
  _inherits(InformationScreen, _Component4);

  function InformationScreen() {
    _classCallCheck(this, InformationScreen);

    return _possibleConstructorReturn(this, (InformationScreen.__proto__ || Object.getPrototypeOf(InformationScreen)).apply(this, arguments));
  }

  _createClass(InformationScreen, [{
    key: 'render',
    value: function render() {
      var navigate = this.props.navigation.navigate;

      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 215
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 216
            }
          },
          'More information can be found here.'
        )
      );
    }
  }]);

  return InformationScreen;
}(_react2.Component), _class4.navigationOptions = {
  title: 'Information'
}, _temp4));

var WaterFestivalApp = (0, _reactNavigation.TabNavigator)({
  AllActivitiesScreen: { screen: AllActivitiesScreen },
  MyActivitiesScreen: { screen: MyActivitiesScreen },
  ContentPage: { screen: _ContentPage.ContentPage },
  InformationScreen: { screen: InformationScreen }
}, {
  tabBarComponent: _reactNativeMaterialBottomNavigation.NavigationComponent,
  tabBarPosition: 'bottom',
  tabBarOptions: {
    bottomNavigationOptions: {
      style: {
        height: 60
      },
      labelColor: 'black',
      backgroundColor: '#C4C4C4',
      rippleColor: 'white',
      tabs: {
        AllActivitiesScreen: {
          icon: _react3.default.createElement(_MaterialIcons2.default, { size: 24, color: 'black', name: 'account-circle', __source: {
              fileName: _jsxFileName,
              lineNumber: 241
            }
          })
        },
        MyActivitiesScreen: {
          icon: _react3.default.createElement(_MaterialIcons2.default, { size: 24, color: 'black', name: 'map', __source: {
              fileName: _jsxFileName,
              lineNumber: 244
            }
          })
        },
        ContentPage: {
          icon: _react3.default.createElement(_MaterialIcons2.default, { size: 24, color: 'black', name: 'add', __source: {
              fileName: _jsxFileName,
              lineNumber: 247
            }
          })
        },
        InformationScreen: {
          icon: _react3.default.createElement(_MaterialIcons2.default, { size: 24, color: 'black', name: 'perm-device-information', __source: {
              fileName: _jsxFileName,
              lineNumber: 250
            }
          })
        }
      }
    }
  }
});

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF'
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5
  },
  container: {
    flex: 1,
    alignContent: 'center',
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
    position: 'relative',
    fontSize: 40
  },
  textinputContainer: {
    marginTop: 20,
    justifyContent: 'center',
    alignItems: 'center'
  },
  textinput: {
    width: 60,
    marginVertical: 2,
    marginHorizontal: 2,
    borderRadius: 5,
    borderColor: '#c7c7cc',
    backgroundColor: 'white'
  }

});

var allActivitiesStyles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 22
  },
  sectionHeader: {
    paddingTop: 3,
    paddingLeft: 36,
    paddingBottom: 2,
    fontSize: 15,
    fontWeight: 'bold',
    color: '#FFFFFF',
    backgroundColor: '#92D3F9'
  },
  item: {
    paddingTop: 8,
    paddingLeft: 36,
    paddingBottom: 10,
    fontSize: 16.5,
    color: '#000000',
    height: 44,
    backgroundColor: '#F3FAFD'
  }
});

exports.default = WaterFestivalApp;